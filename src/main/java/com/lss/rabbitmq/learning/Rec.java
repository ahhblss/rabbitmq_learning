package com.lss.rabbitmq.learning;

import com.rabbitmq.client.*;

import java.io.IOException;

/**
 * Created by Sean.liu on 2016/7/19.
 */
public class Rec {

    public static final String QUEUE_NAME="hello";

    public static void main(String[] args) throws IOException {
        ConnectionFactory factory = new ConnectionFactory();
        factory.setHost("192.168.12.113");
        factory.setUsername("user_admin");
        factory.setPassword("password_admin");
        Connection connection = factory.newConnection();
        Channel channel = connection.createChannel();

        channel.queueDeclare(QUEUE_NAME, false, false, false, null);
        System.out.println(" [*] Waiting for messages. To exit press CTRL+C");

        Consumer consumer = new DefaultConsumer(channel) {
            @Override
            public void handleDelivery(String consumerTag, Envelope envelope, AMQP.BasicProperties properties, byte[] body)
                    throws IOException {
                String message = new String(body, "UTF-8");
                System.out.println(" [x] Received '" + message + "'");
            }
        };

//        * @param queue the name of the queue
//        * @param autoAck true if the server should consider messages
//                * acknowledged once delivered; false if the server should expect
//        * explicit acknowledgements
//        * @param callback an interface to the consumer object
//        * @return the consumerTag generated by the server

        channel.basicConsume(QUEUE_NAME, true, consumer);
    }
}
